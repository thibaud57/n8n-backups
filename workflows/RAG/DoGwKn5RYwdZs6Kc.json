{
  "active": false,
  "connections": {
    "List Docs In Folder": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Found Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get folder content": {
      "main": [
        [
          {
            "node": "If folder id exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get folderName form": {
      "main": [
        [
          {
            "node": "Set Source FORM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch mimeType": {
      "main": [
        [
          {
            "node": "Extract from Pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Pdf": {
      "main": [
        [
          {
            "node": "Map text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "If folder id exists": {
      "main": [
        [
          {
            "node": "Metadata dbName",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Source",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get folderName form 2": {
      "main": [
        [
          {
            "node": "Get folder content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download files": {
      "main": [
        [
          {
            "node": "Switch mimeType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If every skipItem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Query file id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create table if not exists": {
      "main": [
        [
          {
            "node": "List Docs In Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query file id": {
      "main": [
        [
          {
            "node": "If exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If exists": {
      "main": [
        [
          {
            "node": "If date is after",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create metadata row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If date is after": {
      "main": [
        [
          {
            "node": "Delete Qdrant metadata.fileId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add skipItem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Qdrant metadata.fileId": {
      "main": [
        [
          {
            "node": "Update metadata row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create metadata row": {
      "main": [
        [
          {
            "node": "Add general fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update metadata row": {
      "main": [
        [
          {
            "node": "Add general fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add general fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items 2": {
      "main": [
        [
          {
            "node": "Set Done Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "main": [
        [
          {
            "node": "Wait 5s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Metadata dbName": {
      "main": [
        [
          {
            "node": "Create table if not exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add skipItem": {
      "main": [
        [
          {
            "node": "Add general fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Build query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Source WEBHOOK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build query": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map text": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5s": {
      "main": [
        [
          {
            "node": "Loop Over Items 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Set Source WORKFLOW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Source FORM": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Source WEBHOOK": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Source WORKFLOW": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Switch Source": {
      "main": [
        [
          {
            "node": "Get folderName form 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Not Found Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Not Found Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Done Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Get folder content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Nothing to perform Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter skipItem": {
      "main": [
        [
          {
            "node": "Loop Over Items 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Set Nothing to perform Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If every skipItem": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filter skipItem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-05T11:23:05.908Z",
  "id": "DoGwKn5RYwdZs6Kc",
  "isArchived": false,
  "meta": null,
  "name": "Drive RAG",
  "nodes": [
    {
      "parameters": {
        "url": "https://script.google.com/macros/s/AKfycbycjbJvhVVvAT8cMo6chtrU2AX2uq1XYz7vFXnrRP3uT5GPUQx2UGBcWxvL3mzNg8M4/exec",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "=folderId",
              "value": "={{ $('Get folder content').item.json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        -512
      ],
      "id": "69089799-ca51-41f1-a0e7-e9b743a531f0",
      "name": "List Docs In Folder",
      "alwaysOutputData": true,
      "executeOnce": true,
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "=name = '{{ $json.folderName }}'",
        "limit": 1,
        "filter": {
          "whatToSearch": "folders"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1232,
        480
      ],
      "id": "c3469dbe-9ecf-42b5-9513-8ce26a19f243",
      "name": "Get folder content",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "UCl3H8n0n5BgmnCw",
          "name": "Google Drive account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "formTitle": "Get folder name",
        "formDescription": "Folder name to update rag content (ex: rag_appart)",
        "formFields": {
          "values": [
            {
              "fieldLabel": "folderName",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -2032,
        448
      ],
      "id": "0eee2426-806d-42ab-a5b5-fd36defb4d9c",
      "name": "Get folderName form",
      "webhookId": "a003fb53-fffc-42b6-8c0b-723b340e7289"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c70d41c8-c71c-4965-b891-8186275edbfb"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b193a8d9-1322-44a2-a506-54e9fcca4e80",
                    "leftValue": "={{ $json.mimeType === 'application/vnd.google-apps.document' || $json.mimeType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' }}",
                    "rightValue": "=",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -400,
        592
      ],
      "id": "4490ffc3-b5c9-4ffa-8325-c99a30ecfc55",
      "name": "Switch mimeType"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -112,
        496
      ],
      "id": "babae3ae-c345-4fd0-81ce-19e9e41227f3",
      "name": "Extract from Pdf"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('Metadata dbName').item.json.qdrantDbName }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        288,
        832
      ],
      "id": "12045ffb-440e-49da-b54a-d00d570ba9b0",
      "name": "Qdrant Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        288,
        992
      ],
      "id": "586ae0bd-991a-4ac3-9a46-54c6621c2129",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $('Map text').first().json.text }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "fileId",
                "value": "={{ $('Download files').item.json.id }}"
              },
              {
                "name": "fileName",
                "value": "={{ $('List Docs In Folder').item.json.name }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        464,
        960
      ],
      "id": "baa01a98-4a91-4250-ad95-33a56246ae44",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 800,
        "chunkOverlap": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        624,
        1056
      ],
      "id": "109689ad-9436-464a-ae24-6504fcafe737",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-docx-converter.docxToText",
      "typeVersion": 1,
      "position": [
        -112,
        672
      ],
      "id": "c969f16b-765f-44de-969e-be1ab6d571bb",
      "name": "DOCX to Text"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1bf0453a-8f8c-40e2-bfad-8398a6e33a8c",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -992,
        480
      ],
      "id": "416a37f6-e5d8-4b54-8c43-48edc4b66415",
      "name": "If folder id exists"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "folderName",
              "placeholder": "rag_appart"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        -992,
        688
      ],
      "id": "a01949bc-4417-478e-b880-8b7c5a7b89ff",
      "name": "Get folderName form 2",
      "webhookId": "cd718a60-097d-4560-b134-65ceab263156"
    },
    {
      "parameters": {
        "errorMessage": "Aucun résultat, veuillez vérifier !"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -976,
        -272
      ],
      "id": "15e8b773-5733-4850-a151-f434ea30bd14",
      "name": "Not Found Error"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Loop Over Items').item.json.id }}",
          "mode": "id"
        },
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -560,
        592
      ],
      "id": "40ab2346-37cf-46c4-b3cd-a5ad19cc3eaa",
      "name": "Download files",
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -592,
        -464
      ],
      "id": "e5c60f43-ec7f-4528-9934-a111afe70707",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE IF NOT EXISTS {{ $json.postgresDbName }} (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    \"createdAt\" TIMESTAMPTZ,\n    \"updatedAt\" TIMESTAMPTZ,\n    \"theme\" TEXT,\n    \"topics\" TEXT,\n    \"painPoints\" TEXT,\n    \"keywords\" TEXT\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1280,
        -512
      ],
      "id": "48266159-f57d-4099-bcc3-cffe2c29648f",
      "name": "Create table if not exists"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, \"createdAt\", \"updatedAt\" \nFROM {{ $('Metadata dbName').item.json.postgresDbName }}\nWHERE id = '{{ $('Loop Over Items').item.json.id }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -304,
        -448
      ],
      "id": "ab4312ce-d0ef-42cc-9712-77527234c905",
      "name": "Query file id",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6a0f1d8e-2473-4933-8292-7ed98edba132",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $('Loop Over Items').item.json.id }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -80,
        -448
      ],
      "id": "5f123b68-49a3-4dfb-b8f2-b26e1cee0f64",
      "name": "If exists"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c72db11d-3dc1-4a5d-9b02-0cf5e58f2370",
              "leftValue": "={{ $('Loop Over Items').item.json.createdAt }}",
              "rightValue": "={{ $('Query file id').item.json.createdAt }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "0ec123dc-5720-4bd1-8976-6ff59f711141",
              "leftValue": "={{ $('Loop Over Items').item.json.updatedAt }}",
              "rightValue": "={{ $('Query file id').item.json.updatedAt }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        160,
        -464
      ],
      "id": "a975883c-ef4a-44c9-817d-f814c0a9a46b",
      "name": "If date is after",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://qdrant:6333/collections/{{ $('Metadata dbName').item.json.qdrantDbName }}/points/delete",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"filter\": {\n    \"must\": [\n      {\n        \"key\": \"metadata.fileId\",\n        \"match\": {\n          \"value\": \"{{ $('List Docs In Folder').item.json.id }}\"\n        }\n      }\n    ]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        496,
        -464
      ],
      "id": "0f63bf0c-ab35-4b4f-b213-f9cf7d5f6fd5",
      "name": "Delete Qdrant metadata.fileId"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO {{ $('Metadata dbName').item.json.postgresDbName }}\n(id, title, \"createdAt\", \"updatedAt\") \nVALUES \n('{{ $('Loop Over Items').item.json.id }}', '{{ $('Loop Over Items').item.json.name }}', '{{ $('Loop Over Items').item.json.createdAt }}', '{{ $('Loop Over Items').item.json.updatedAt }}');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -80,
        -208
      ],
      "id": "96059be9-c9a9-4f39-a900-b6ba345a8a7f",
      "name": "Create metadata row"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE {{ $('Metadata dbName').item.json.postgresDbName }}\nSET \n    title = '{{ $('List Docs In Folder').item.json.name }}',\n    \"createdAt\" = '{{ $('List Docs In Folder').item.json.createdAt }}',\n    \"updatedAt\" = '{{ $('List Docs In Folder').item.json.updatedAt }}'\nWHERE \n    id = '{{ $('Loop Over Items').item.json.id }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        496,
        -208
      ],
      "id": "ae7263dc-acc7-4b35-ba3f-3f27378c8458",
      "name": "Update metadata row"
    },
    {
      "parameters": {
        "content": "# Step 2: Metadata table (PostGres)",
        "height": 860,
        "width": 2200,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1424,
        -752
      ],
      "id": "c0adb7df-0342-4122-8a5c-5eb029f6f92d",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Step 1: Get files from Drive's folder by name",
        "height": 1000,
        "width": 700,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1424,
        176
      ],
      "id": "c73f0985-ba1f-4098-943f-36de7ecad25b",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Step 3: Insert into vector store (Qdrant)",
        "height": 1000,
        "width": 1460,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -672,
        176
      ],
      "id": "5ff7f6f4-3ec1-4b71-a653-8b813a774369",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1206608d-dc8f-4aa4-9579-12616a719eeb",
              "name": "id",
              "value": "={{ $('List Docs In Folder').item.json.id }}",
              "type": "string"
            },
            {
              "id": "ae3799fd-49a9-45b9-9ce7-122e0662991d",
              "name": "name",
              "value": "={{ $('List Docs In Folder').item.json.name }}",
              "type": "string"
            },
            {
              "id": "0d7aae65-4ead-481a-8307-76e424b02bd5",
              "name": "mimeType",
              "value": "={{ $('List Docs In Folder').item.json.mimeType }}",
              "type": "string"
            },
            {
              "id": "a773e170-f166-4684-b4c2-68a49096db56",
              "name": "url",
              "value": "={{ $('List Docs In Folder').item.json.url }}",
              "type": "string"
            },
            {
              "id": "18f6bb69-6b26-4c0c-97fc-8a47c5c90391",
              "name": "createdAt",
              "value": "={{ $('List Docs In Folder').item.json.createdAt }}",
              "type": "string"
            },
            {
              "id": "1b614e13-8093-4523-aa10-743d626557ca",
              "name": "updatedAt",
              "value": "={{ $('List Docs In Folder').item.json.updatedAt }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "except",
        "excludeFields": "success",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -416,
        -208
      ],
      "id": "e5a536c8-237a-498a-b4b0-2cc58486bf91",
      "name": "Add general fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -640,
        256
      ],
      "id": "f831d8e0-f79d-4777-8b61-2e799e7d1fd9",
      "name": "Loop Over Items 2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-exp-03-25",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "29f2ffda-10c5-49d1-a703-8281b1d200ae",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        320,
        496
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.query }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        576,
        512
      ],
      "id": "c76b471f-c23f-4b73-828d-0a7cfcdbd449",
      "name": "Postgres"
    },
    {
      "parameters": {
        "content": "## Triggers",
        "height": 660,
        "width": 620,
        "color": 4
      },
      "id": "a94582a7-3dc0-415c-b4c1-e0880dabf728",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2080,
        336
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get the folder\n- Search for the folder by name\n- Ask the user again if couldn't find",
        "height": 660,
        "width": 500
      },
      "id": "333fc462-5005-4383-abde-e9d84e3b62cb",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1312,
        336
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Drive\n- List all docs in folder (recursive)",
        "height": 600,
        "width": 300,
        "color": 2
      },
      "id": "f6624812-489b-4467-936e-5cad9af22412",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1056,
        -624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Postgres\n- Create table if not exists",
        "height": 280,
        "width": 300,
        "color": 5
      },
      "id": "0e98a0e8-be91-4908-8fc9-0934886bf261",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1376,
        -624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "66da3861-2945-403a-9463-c0177407ebf1",
              "name": "postgresDbName",
              "value": "=n8n_{{ $('Get folder content').item.json.name.toLowerCase() }}_metadata",
              "type": "string"
            },
            {
              "id": "28492a8e-d548-4b47-9486-0e841500dc42",
              "name": "qdrantDbName",
              "value": "=n8n_{{ $('Get folder content').item.json.name.toLowerCase() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1280,
        -208
      ],
      "id": "7b45930f-b028-4536-89a6-11a09e8bb038",
      "name": "Metadata dbName"
    },
    {
      "parameters": {
        "content": "## Postgres (metadata)\n- Perform batch treatment on files\n- If a file is found on metadata's table we look for the date\n- If createdAt or updatedAt is newer we perfom safe upsert on file\n- We skip other items (no need to update them)",
        "height": 600,
        "width": 1040,
        "color": 5
      },
      "id": "c899d14c-b4e8-435b-bc82-237116f62c32",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -672,
        -624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Map db names\n- postgresDbName\n- qdrantDbName",
        "height": 300,
        "width": 300,
        "color": 6
      },
      "id": "edd1dfb2-ed09-4f82-9de2-bba3b5e03e92",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1376,
        -320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Qdrant\n- Deletion based on metadata fileId in Qdrant",
        "height": 600,
        "width": 300,
        "color": 3
      },
      "id": "abe04cbc-99c9-4de4-b7d3-2af94e2af361",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        400,
        -624
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c634455-a97f-42e9-b56d-22eb9e94ab02",
              "name": "skipItem",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        160,
        -208
      ],
      "id": "26e14c7e-9f75-4b75-b7e4-38cef5205b68",
      "name": "Add skipItem"
    },
    {
      "parameters": {
        "content": "## Google Drive\n- Download file",
        "height": 340,
        "width": 340
      },
      "id": "c323b65d-a161-4015-837e-e056979d3fae",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -592,
        448
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## File extraction\n- Pdf\n- Docx, txt, ...",
        "height": 500,
        "width": 400,
        "color": 6
      },
      "id": "4a6351de-e697-47a8-89dc-3b0051b450d0",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -192,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "attributes": {
          "attributes": [
            {
              "name": "theme",
              "description": "Résumer le(s) thème(s) principal(aux) abordé(s) dans le document."
            },
            {
              "name": "topics",
              "description": "Répertoriez les sujets récurrents mentionnés dans le document sous forme de tableau."
            },
            {
              "name": "painPoints",
              "description": "Résumez les frustrations ou les défis de l'utilisateur mentionnés dans la section du document sous la forme d'un tableau. (facultatif)"
            },
            {
              "name": "keywords",
              "description": "Générez une liste de 10 mots-clés maximum qui capturent l’essence du document (par exemple, « contrat », « juridique », « appartement »)."
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=Tu es un expert en algorithmes d'extraction.\nExtrais uniquement les informations pertinentes du texte.\nSi tu ne connais pas la valeur d'un attribut à extraire, tu peux l'omettre.\n\nIMPORTANT: Ta réponse doit être UNIQUEMENT un objet JSON valide avec les champs suivants :\n- theme: le thème principal du document\n- topics: les sujets abordés dans le document\n- painPoints: les points de douleur identifiés (optionnel)\n- keywords: les mots-clés pertinents\n\nNe pas inclure de backticks (```) ou de formatage Markdown, ni la mention json. Réponds simplement avec l'objet JSON brut."
        }
      },
      "id": "eceb3e7c-55a2-4783-b321-76f4fc17c7a8",
      "name": "Summarize",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        288,
        352
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Summarizer\n- Extract relevant infos: theme, topics, painPoints, keywords\n- Insert them into metadata's table",
        "height": 440,
        "width": 500,
        "color": 5
      },
      "id": "4833822a-61a2-424d-87cd-028ce50c25ae",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Qdrant\n- Embed the text into vector store\n- Chunk size (800) / Chunk overlap (100)",
        "height": 440,
        "width": 500,
        "color": 3
      },
      "id": "64439c6d-34d3-480a-bd95-b0db65907452",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "1699725a-8f47-4139-a958-67280be8f5fa",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2032,
        640
      ],
      "id": "6f236604-884e-491d-bae9-14a5c57bf463",
      "name": "Webhook",
      "webhookId": "1699725a-8f47-4139-a958-67280be8f5fa"
    },
    {
      "parameters": {
        "content": "\n\n\nBatch download is prefered on files.\nBecause Google can perfrom timeout.",
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -592,
        816
      ],
      "id": "9a64035c-fd23-4c7d-888e-b6e5aace9a70",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -192,
        1760
      ],
      "id": "3949711a-5f9e-4de2-abd5-bd9b2c38214f",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "jsCode": "const output = $json.output;\nconst updateFields = [];\nconst dbName = $('Metadata dbName').first().json.postgresDbName;\n\nupdateFields.push(`\"theme\" = '${output.theme.replace(/'/g, \"''\")}'`);\nupdateFields.push(`\"topics\" = '${output.topics.replace(/'/g, \"''\")}'`);\n\n// Ajouter painPoints seulement s'il existe et n'est pas undefined\nif (output.painPoints && output.painPoints !== 'undefined') {\n  updateFields.push(`\"painPoints\" = '${output.painPoints.replace(/'/g, \"''\")}'`);\n}\n\nupdateFields.push(`\"keywords\" = '${output.keywords.replace(/'/g, \"''\")}'`);\n\nconst query = `\nUPDATE ${dbName}\nSET ${updateFields.join(', ')}\nWHERE id = '${$('Loop Over Items').item.json.id}';`;\n\nreturn { query };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        576,
        352
      ],
      "id": "016ffba6-1060-4cf1-a797-57ffbb1a4f21",
      "name": "Build query"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a3db721c-86b8-4665-af1a-cde6643ffa0b",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        64,
        560
      ],
      "id": "5030c565-77e0-4465-9bc6-84b17b81bcb1",
      "name": "Map text"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -272,
        832
      ],
      "id": "3cda100e-e3da-4c77-9e07-e605e99353e4",
      "name": "Wait 5s",
      "webhookId": "ce5815e9-8531-4fb4-9bca-3090f644c73a"
    },
    {
      "parameters": {
        "content": "## Chunk params\n- Long: 1000-5000\n- Short: 500-1000\n- Items, list: 100-500\n\n## Overlap params\n1-5%",
        "height": 220,
        "width": 220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        816,
        688
      ],
      "id": "b94e5204-d3e5-4d33-bee1-1834bee79d2d",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "folderName"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2032,
        800
      ],
      "id": "c87cfe11-392d-4b28-ac6d-b73465d46046",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "80742a69-4d70-46cc-a812-64c4f397c8cb",
              "leftValue": "={{ $('Merge').item.json.source }}",
              "rightValue": "WORKFLOW",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -416,
        1568
      ],
      "id": "604c0535-b46c-4adb-8f1b-6c4dae5d3659",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42a4429b-a22b-4017-8be0-b60e16749d4a",
              "name": "source",
              "value": "FORM",
              "type": "string"
            },
            {
              "id": "35853db2-9085-4028-82cd-905f6a2c9c9c",
              "name": "folderName",
              "value": "={{ $json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1808,
        448
      ],
      "id": "3561ff8b-d844-4663-88ad-ac7b08bdaa19",
      "name": "Set Source FORM"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42a4429b-a22b-4017-8be0-b60e16749d4a",
              "name": "source",
              "value": "WEBHOOK",
              "type": "string"
            },
            {
              "id": "5b19b7be-9909-4187-8f6a-f9897fd8e61f",
              "name": "folderName",
              "value": "={{ $json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1808,
        640
      ],
      "id": "5725fb59-b811-4dcb-b4cf-d3c44d44532d",
      "name": "Set Source WEBHOOK"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42a4429b-a22b-4017-8be0-b60e16749d4a",
              "name": "source",
              "value": "WORKFLOW",
              "type": "string"
            },
            {
              "id": "7169a941-e95f-43e0-99b0-2a00a27950e1",
              "name": "folderName",
              "value": "={{ $json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1808,
        800
      ],
      "id": "a2f583ea-b731-4cca-99a0-e9de18180925",
      "name": "Set Source WORKFLOW"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Merge').item.json.source }}",
                    "rightValue": "FORM",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a36f4867-1bcc-4a6c-9176-78a77e01a596"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "63155b24-fb50-42f5-bb85-aa6e1aaf951d",
                    "leftValue": "={{ $('Merge').item.json.source }}",
                    "rightValue": "WORKFLOW",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1232,
        720
      ],
      "id": "31684cbc-7630-446e-98f5-38ff1c4ea9c4",
      "name": "Switch Source"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b48fb769-a6c6-40ae-aed4-834036d402d3",
              "name": "message",
              "value": "=Impossible de trouver le dossier: {{ $('Merge').item.json.folderName }} veuillez réessayer !",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        1760
      ],
      "id": "9d874ff1-970c-47f2-9602-f8327b5a4160",
      "name": "Set Not Found Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7211bd87-a15f-442c-ace3-a51da512b215",
              "name": "message",
              "value": "=Mise à jour du dossier: {{ $('Merge').item.json.folderName }} avec succès !",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        1568
      ],
      "id": "85ed9046-1cd7-4cca-bbbe-8909f5b3f524",
      "name": "Set Done Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "505cc1da-27a0-4456-b96d-946245c186f5",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -192,
        1376
      ],
      "id": "2e3609f2-5f1c-4800-bab5-5b845d33def9",
      "name": "Response"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -1600,
        640
      ],
      "id": "78cec4a1-fd48-4568-83ac-080427f56268",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "# Final\nSend a message to the user if he's coming from the Telegram Workflow",
        "height": 700,
        "width": 680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -672,
        1248
      ],
      "id": "b5b52442-37bb-4109-aec0-dd022ff3b288",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b48fb769-a6c6-40ae-aed4-834036d402d3",
              "name": "message",
              "value": "=Aucun élément à mettre à jour dans le dossier: {{ $('Merge').item.json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        1376
      ],
      "id": "a9b18b3d-5d17-4f67-8774-57d9744fa265",
      "name": "Set Nothing to perform Message"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f56ac961-984f-4152-b912-794308eb9be3",
              "leftValue": "={{ $json.skipItem }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        64,
        176
      ],
      "id": "96a694ed-248a-4642-a70c-ae073e195ef8",
      "name": "Filter skipItem",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        64,
        0
      ],
      "id": "14f5ded9-62f1-486a-9a42-a0c501c11225",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "66ed9108-8757-4933-8c79-d4731b98b06f",
              "leftValue": "={{ $input.all().every(item => item.json.skipItem) }}",
              "rightValue": "={{ $input.all().length }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -592,
        16
      ],
      "id": "2d2d2e28-a694-4c2f-a6eb-1e85a5d11565",
      "name": "If every skipItem"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-05T11:17:25.690Z",
      "updatedAt": "2025-08-05T11:17:25.690Z",
      "id": "7e9bdSoSn34OWjgN",
      "name": "RAG"
    },
    {
      "createdAt": "2025-08-05T11:22:54.901Z",
      "updatedAt": "2025-08-05T11:22:54.901Z",
      "id": "OGRTGZGKvY5GOxHE",
      "name": "drive"
    },
    {
      "createdAt": "2025-08-05T11:22:58.405Z",
      "updatedAt": "2025-08-05T11:22:58.405Z",
      "id": "ZDutVaA6smCB38oU",
      "name": "qdrant"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-05T11:23:39.000Z",
  "versionId": "b2780e78-fc04-4666-a9d6-ccc4bba3923e"
}