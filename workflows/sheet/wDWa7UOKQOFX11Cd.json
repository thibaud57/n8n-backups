{
  "active": false,
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "Filter new data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter new data": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Soundcloud Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Set Soundcloud Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Facebook Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Instagram Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Beatport Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Bandcamp Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Soundcloud Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Instagram Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Facebook Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Bandcamp Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Beatport Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4.1 mini": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "4.1 mini1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Beatport Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Techno scraper": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "LabelSheet Subworkflow": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Bandcamp Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-23T17:37:50.435Z",
  "id": "wDWa7UOKQOFX11Cd",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Label Sheet",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "value": "134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        -380,
        -120
      ],
      "id": "65c198fd-b65c-4eeb-8360-c5230ae18e16",
      "name": "Google Sheets Trigger",
      "credentials": {
        "googleSheetsTriggerOAuth2Api": {
          "id": "lw1QeIZo3SAkk17L",
          "name": "Google Sheets Trigger account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c9617af9-d01b-4184-a5cf-9f9497403471",
              "leftValue": "={{ $json.N8N }}",
              "rightValue": "=Oui",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "d7ce151c-204d-449e-a77f-5dc42861c901",
              "leftValue": "={{ $json.Nom.toString() }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -160,
        -120
      ],
      "id": "76f9a0e8-b9ca-4863-a021-4b5916946687",
      "name": "Filter new data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Nom du label: {{ $json.Nom }}\nDate du jour: {{ $today }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# üè∑Ô∏è Agent IA de Remplissage Automatique pour Google Sheet ‚Äì Labels Musicaux  \n\n## üéØ Objectif  \nAutomatiser la collecte et le remplissage des informations d‚Äôun label musical dans un **Google Sheet**.\n\nAfin de r√©partir la charge et d'am√©liorer l'efficacit√© du processus, nous orchestrons et distribuons les t√¢ches √† plusieurs **sous-agents sp√©cialis√©s** (SoundCloud, Facebook, Instagram, Beatport, Bandcamp). Chaque sous-agent est responsable de l‚Äôextraction des donn√©es sur sa plateforme respective.\n\n\nTon but est donc de coordonner l‚Äôex√©cution des sous-agents et rassembler les donn√©es extraites dans un format JSON structur√©.  \n\n---\n\n## üì• Donn√©es d‚Äôentr√©e  \nL‚Äôagent re√ßoit en entr√©e :  \n- **Le nom du label** *(exemple : \"Afterlife Recordings\")* \n- **La date du jour** *(exemple : \"[DateTime: 2025-03-23T00:00:00.000+01:00]\")* \n\n---\n\n### **üõ†Ô∏è Processus**  \n1. Transmettre les inputs aux sous agents en indiquant **name** pour le nom du label et **date** au format (YYYY-MM-DD).\n2. R√©cup√©rer leur outputs. Lorsqu'un agent √† terminer sa tache il renvoi **isAgentDone: true**.\nLes agents s'executent en parall√®le, il est primordial que chaque agent renvoi isAgentDone √† true pour chaque nom de label √† scraper avant de passer √† la suite.\n3. **Fusionner les r√©sultats** dans un JSON unique une fois que tous les agents ont fini leur taches.\n\n---\n\n## üì• Format de sortie  \n{\n  \"country\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"genre\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"isActive\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"isOpenNew\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"emailDemo\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"vinyle\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"scFollowers\": \"Valeur num√©rique si trouv√©e, sinon champ vide\",\n  \"soundcloudLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"facebookLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"instagramLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"beatportLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"bandcampLink\": \"URL si trouv√©e, sinon champ vide\"\n}\n\n---\n\n## ‚úÖ **R√©sum√© de l'Architecture**  \n\n1. **L‚Äôagent orchestrateur** re√ßoit le **nom du label**.  \n2. Il d√©l√®gue les recherches aux **sous-agents sp√©cialis√©s** dans cet ordre pr√©cis :  \n   - **SoundCloud** (Pays, Email demo, Followers, Lien SoundCloud)  \n   - **Facebook** (Lien Facebook, Email demo)  \n   - **Instagram** (Lien Instagram, Email demo)  \n   - **Beatport** (Genre, Actif, Ouvert aux nouveaux, Lien Beatport)  \n   - **Bandcamp** (Vinyle, Lien Bandcamp)\n3. Il attend que tous les agents finissent leur tache en cours.\n4. Il r√©cup√®re et **fusionne les r√©sultats** en un JSON final.\n\nüéØ **Finalit√©**\nPasser √† la suite une fois que le JSON final est produit."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        660,
        -380
      ],
      "id": "ce03cfce-5aaf-48fb-9376-8deda87a6eec",
      "name": "AI Agent",
      "executeOnce": false
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"country\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"genre\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"isActive\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"isOpenNew\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"emailDemo\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"vinyle\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"scFollowers\": \"Valeur num√©rique si trouv√©e, sinon champ vide\",\n  \"soundcloudLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"facebookLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"instagramLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"beatportLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"bandcampLink\": \"URL si trouv√©e, sinon champ vide\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1140,
        40
      ],
      "id": "772d45c5-8907-49c1-9b38-26e93304a4fb",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Soundcloud",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "dba1aff8-a1ce-43f3-bd1f-a5669382407c"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3ec63d0e-2e77-4adf-be10-336fdcf1eafa",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Facebook",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "799619c6-79d9-421e-bbef-332c30617317",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Instagram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b36f8a60-5a56-4e99-86cc-34811d8831c5",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Beatport",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "23f1bfc1-a6c3-4c97-a6bc-d1ab8267383b",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Bandcamp",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        180,
        598
      ],
      "id": "3cb51d1d-5880-4425-a451-5b315168d418",
      "name": "Switch"
    },
    {
      "parameters": {
        "name": "Soundclould",
        "description": "Agent Soundcloud",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        720,
        20
      ],
      "id": "59f11ca8-c2db-4081-9a5b-a0d22261e5c6",
      "name": "Soundcloud Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **2. Agent SoundCloud**  \n\n### **üéØ Objectif**  \nExtraire les informations disponibles sur **SoundCloud** du label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page SoundCloud officielle via **Brave Search**.  \n2. Extraire :  \n   - **Pays** *(si mentionn√© sur la page)*  \n   - **Email demo** *(description du profil)*  \n   - **Nombre de followers**  \n   - **Lien de la page SoundCloud**  \n\n### **üì§ Format de sortie**  \n{\n  \"Pays\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"Email demo\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"Followers SC\": \"Valeur num√©rique si trouv√©e, sinon champ vide\",\n  \"SoundCloud\": \"URL si trouv√©e, sinon champ vide\"\n}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        240
      ],
      "id": "d4ad9b4c-5351-4feb-b121-0a0cbfcff5d7",
      "name": "Set Soundcloud Prompt"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt }}",
        "options": {
          "systemMessage": "=## üõ†Ô∏è Proc√©dure d‚Äôextraction des informations  \n\nL‚Äôagent suit la m√©thodologie suivante pour r√©cup√©rer les donn√©es :  \n\nL‚Äôagent utilise **Techno scraper** pour trouver les pages officielles des labels sur diff√©rentes plateformes et en extraire les informations.\nIl va passer √† l'outil l'url √† scraper.\nEnsuite il doit extraire les informations pertinentes.\n\n---\n\n## ‚ùó R√®gles Importantes  \nüî¥ **Ne jamais inventer une information.**  \n‚úîÔ∏è Si une donn√©e est introuvable, **ne pas remplir le champ** plut√¥t que de g√©n√©rer une fausse information.  \n\n---\n\n## üìù Format de sortie  \nL‚Äôagent doit uniquement renvoyer un JSON format√© tel que sp√©cifi√© dans son prompt contenant les champs trouv√©s, sans aucun commentaire ni explication suppl√©mentaire.  \n\n---\n\n## ‚úÖ V√©rifications Finales  \nAvant de renvoyer les donn√©es :  \n- **S‚Äôassurer que toutes les informations sont correctes.**  \n- **Ne pas remplir un champ si l‚Äôinformation est introuvable.**  \n- **V√©rifier le bon format JSON avant de retourner la r√©ponse.**  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        660,
        640
      ],
      "id": "a1fdb199-2d77-4ca8-95de-15973e4acc01",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **3. Agent Facebook**  \n\n### **üéØ Objectif**  \nExtraire les informations disponibles sur **Facebook** du label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page Facebook officielle via **Brave Search**.  \n2. Extraire :  \n   - **Lien de la page Facebook**  \n   - **Email demo** *(si non trouv√© sur SoundCloud, rechercher dans la description du profil Facebook)*  \n\n### **üì§ Format de sortie**  \n{\n  \"Facebook\": \"URL si trouv√©e, sinon champ vide\",\n  \"Email demo\": \"Valeur si trouv√©e, sinon champ vide\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        440
      ],
      "id": "31951e12-abb8-4ba3-88cc-88c42c1e9b96",
      "name": "Set Facebook Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **4. Agent Instagram**  \n\n### **üéØ Objectif**  \nExtraire les informations disponibles sur **Instagram** du label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page Instagram officielle via **Brave Search**.  \n2. Extraire :  \n   - **Lien de la page Instagram**  \n   - **Email demo** *(si non trouv√© ailleurs, rechercher dans la bio Instagram)*  \n\n### **üì§ Format de sortie**  \n{\n  \"Instagram\": \"URL si trouv√©e, sinon champ vide\",\n  \"Email demo\": \"Valeur si trouv√©e, sinon champ vide\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        640
      ],
      "id": "c2a77315-1260-4a67-9736-7bbf2a2172eb",
      "name": "Set Instagram Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **6. Agent Bandcamp**  \n\n### **üéØ Objectif**  \nExtraire les informations sur **Bandcamp** concernant le label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page Bandcamp officielle via **Brave Search**.  \n2. Extraire :  \n   - **Lien de la page Bandcamp**  \n   - **Si le label vend des vinyles** *(mention visible sur la page)*  \n\n### **üì§ Format de sortie**  \n{\n  \"Vinyle\": \"true/false si trouv√©, sinon champ vide\",\n  \"Bandcamp\": \"URL si trouv√©e, sinon champ vide\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        1040
      ],
      "id": "a43cf354-e9bb-4259-9a85-417555452811",
      "name": "Set Bandcamp Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **5. Agent Beatport**  \n\n### **üéØ Objectif**  \nExtraire les informations sur **Beatport** concernant le label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **name** = {{ $('LabelSheet Subworkflow').item.json.name }}\n- **date** = {{ $('LabelSheet Subworkflow').item.json.date }}\n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page avec l'url \"api/beatport/search/{name}?page=1&limit=10&entity_type=label\"\n\n2. Extraire des r√©sultats l'entity_id et l'entity_slug qui semble le plus pertinent\nExemple:\n{\n  ...\n  \"labels\": [\n        {\n      \"id\": 22038,\n      \"name\": \"Drumzone Records\",\n      \"url\": \"https://www.beatport.com/label/drumzone-records/22038\",\n      \"avatar_url\": \"https://geo-media.beatport.com/image_size/500x500/cda9862c-cf92-4d13-ac65-7e9277181f51.jpg\"\n    },\n    ...\n  ]\n}\n- **entity_id** = 22038\n- **entity_slug** = \"drumzone-records\"\n\n3. Rechercher les releases avec l'url \"api/beatport/label/{entity_slug}/releases?entity_id={entity_id}&page=1&limit=100&start_date={date - 1 an}\"\n\n4. Extraire les donn√©es pertinentes\n   - **Genre musical principal** *(celui avec la moyenne la plus √©lev√©e sur 1 an)*  \n   - **Nombre de releases sur 1 an** *(si >10, alors label actif)*\n   - **Nombre d‚Äôartistes uniques sur 1 an** *(si >3, alors label ouvert aux nouveaux)*\n\n\n### **üì§ Format de sortie**  \n{\n  \"genre\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"isActive\": \"true/false d√©termin√© par l'algorithme en √©tape 4\",\n  \"isOpenNew\": \"true/false d√©termin√© par l'algorithme en √©tape 4\",\n  \"beatportLink\": \"URL de la page principale r√©cup√©r√©e par la recherche\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        840
      ],
      "id": "490cf618-42be-42c0-bf25-b645239597c4",
      "name": "Set Beatport Prompt"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        660,
        800
      ],
      "id": "8331e2a2-aa9c-4a6c-a7a5-174b2cb354d2",
      "name": "4.1 mini",
      "credentials": {
        "openRouterApi": {
          "id": "pV44amjL1nJfCXDj",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        420,
        -20
      ],
      "id": "3dc83d57-3ff1-4623-b3b3-b588fd57187e",
      "name": "4.1 mini1",
      "credentials": {
        "openRouterApi": {
          "id": "pV44amjL1nJfCXDj",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "name": "Beatport",
        "description": "Agent Beatport",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        480,
        40
      ],
      "id": "2aacde99-aa8a-4b9a-b0e3-505a8a7ef248",
      "name": "Beatport Agent"
    },
    {
      "parameters": {
        "description": "Outil de scraping",
        "workflowId": {
          "__rl": true,
          "value": "zww9F9TUEbDiNNHV",
          "mode": "list",
          "cachedResultName": "Techno scraper"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', ``, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        840,
        800
      ],
      "id": "4dc5b78e-2513-4c9b-b040-931e9f245948",
      "name": "Techno scraper"
    },
    {
      "parameters": {
        "name": "Facebook",
        "description": "Agent Facebook",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        600,
        0
      ],
      "id": "c079884a-d6c2-4dfd-8124-3f772b8c864e",
      "name": "Facebook Agent"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "agentType"
            },
            {
              "name": "name"
            },
            {
              "name": "date"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -260,
        640
      ],
      "id": "409d7ed0-cb69-47d5-b4d6-3163eed35cc4",
      "name": "LabelSheet Subworkflow"
    },
    {
      "parameters": {
        "name": "Instagram",
        "description": "Agent Instagram",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        880,
        20
      ],
      "id": "c9bdfe44-8b68-49e8-9cda-a305198211aa",
      "name": "Instagram Agent"
    },
    {
      "parameters": {
        "name": "Bandcamp",
        "description": "Agent Bandcamp",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1000,
        40
      ],
      "id": "4a4e9d3b-001c-4b10-9c1d-37a5107d0d7e",
      "name": "Bandcamp Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        220,
        -260
      ],
      "id": "c48b06ef-0e66-4969-964a-57b6a36d5119",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "30a7ec73-6e38-4657-af4f-f7b12e0b08be",
              "name": "isAgentDone",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "becd0b71-3f1e-45b6-8865-5a3b260a27ea",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1300,
        380
      ],
      "id": "537cab92-d26d-4970-9f2a-340e46406adf",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Pays": "={{ $json.output.country }}",
            "Genre": "={{ $json.output.genre }}",
            "Actif": "={{ $json.output.isActive }}",
            "Ouvert nouveaux": "={{ $json.output.isOpenNew }}",
            "Email demo": "={{ $json.output.emailDemo }}",
            "Vinyle": "={{ $json.output.vinyle }}",
            "Followers Sc": "={{ $json.output.scFollowers }}",
            "Soundcloud": "={{ $json.output.soundcloudLink }}",
            "Facebook": "={{ $json.output.facebookLink }}",
            "Instagram": "={{ $json.output.instagramLink }}",
            "Beatport": "={{ $json.output.beatportLink }}",
            "Bandcamp": "={{ $json.output.bandcampLink }}",
            "N8N": "Oui",
            "Nom": "={{ $('Loop Over Items').item.json.Nom }}"
          },
          "matchingColumns": [
            "Nom"
          ],
          "schema": [
            {
              "id": "Nom",
              "displayName": "Nom",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Pays",
              "displayName": "Pays",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Genre",
              "displayName": "Genre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Actif",
              "displayName": "Actif",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ouvert nouveaux",
              "displayName": "Ouvert nouveaux",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email demo",
              "displayName": "Email demo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Dernier envoi",
              "displayName": "Dernier envoi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb Envoi",
              "displayName": "Nb Envoi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb Ecoute",
              "displayName": "Nb Ecoute",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb Dl",
              "displayName": "Nb Dl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb rep email",
              "displayName": "Nb rep email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Release EM",
              "displayName": "Release EM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Vinyle",
              "displayName": "Vinyle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Followers Sc",
              "displayName": "Followers Sc",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soundcloud",
              "displayName": "Soundcloud",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Facebook",
              "displayName": "Facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Instagram",
              "displayName": "Instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Beatport",
              "displayName": "Beatport",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Bandcamp",
              "displayName": "Bandcamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Top",
              "displayName": "Top",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Songstats",
              "displayName": "Songstats",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Beatstats",
              "displayName": "Beatstats",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "N8N",
              "displayName": "N8N",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1220,
        -240
      ],
      "id": "82eaa23d-5957-4d3f-9043-bc464e552ade",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "WUAUwfPB6VbI1YRN",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "5SeL1g0ygtyvlBLC"
  },
  "staticData": {
    "node:Google Sheets Trigger": {
      "documentId": "134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU",
      "sheetId": 0,
      "lastIndexChecked": 709,
      "lastRevision": 7298,
      "lastRevisionLink": "https://docs.google.com/spreadsheets/export?id=134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU&revision=7298&exportFormat=xlsx"
    }
  },
  "tags": [
    {
      "createdAt": "2025-04-29T15:38:32.341Z",
      "updatedAt": "2025-04-29T15:38:32.341Z",
      "id": "I2qE4eGwsPABXirf",
      "name": "sheet"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-07-24T13:59:35.000Z",
  "versionId": "fe4f0dc8-41b3-4715-ae66-f069ce24b721"
}