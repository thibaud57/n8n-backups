{
  "active": true,
  "connections": {
    "List Docs In Folder": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Found Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get folder content": {
      "main": [
        [
          {
            "node": "If folder id exists",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Get folderName form": {
      "main": [
        [
          {
            "node": "Set Source FORM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch mimeType": {
      "main": [
        [
          {
            "node": "Extract from Pdf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DOCX to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Pdf": {
      "main": [
        [
          {
            "node": "Map text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "DOCX to Text": {
      "main": [
        [
          {
            "node": "Map text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If folder id exists": {
      "main": [
        [
          {
            "node": "Metadata dbName",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Source",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get folderName form 2": {
      "main": [
        [
          {
            "node": "Get folder content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download files": {
      "main": [
        [
          {
            "node": "Switch mimeType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If every skipItem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Query file id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create table if not exists": {
      "main": [
        [
          {
            "node": "List Docs In Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query file id": {
      "main": [
        [
          {
            "node": "If exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If exists": {
      "main": [
        [
          {
            "node": "If date is after",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create metadata row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If date is after": {
      "main": [
        [
          {
            "node": "Delete Qdrant metadata.fileId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add skipItem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Qdrant metadata.fileId": {
      "main": [
        [
          {
            "node": "Update metadata row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create metadata row": {
      "main": [
        [
          {
            "node": "Add general fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update metadata row": {
      "main": [
        [
          {
            "node": "Add general fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add general fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items 2": {
      "main": [
        [
          {
            "node": "Set Done Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "main": [
        [
          {
            "node": "Wait 5s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Metadata dbName": {
      "main": [
        [
          {
            "node": "Create table if not exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add skipItem": {
      "main": [
        [
          {
            "node": "Add general fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Build query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Source WEBHOOK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build query": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map text": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5s": {
      "main": [
        [
          {
            "node": "Loop Over Items 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Set Source WORKFLOW",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Source FORM": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Source WEBHOOK": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Source WORKFLOW": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Switch Source": {
      "main": [
        [
          {
            "node": "Get folderName form 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Not Found Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Not Found Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Done Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Get folder content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Nothing to perform Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter skipItem": {
      "main": [
        [
          {
            "node": "Loop Over Items 2",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Set Nothing to perform Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If every skipItem": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filter skipItem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-27T19:26:55.609Z",
  "id": "LytkQY3E14CjN45I",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Drive RAG",
  "nodes": [
    {
      "parameters": {
        "url": "https://script.google.com/macros/s/AKfycbycjbJvhVVvAT8cMo6chtrU2AX2uq1XYz7vFXnrRP3uT5GPUQx2UGBcWxvL3mzNg8M4/exec",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "=folderId",
              "value": "={{ $('Get folder content').item.json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        -40
      ],
      "id": "b18f0cdd-40f9-48ee-b963-41ca94cf148e",
      "name": "List Docs In Folder",
      "alwaysOutputData": true,
      "executeOnce": true,
      "retryOnFail": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rM48WFWYbq8aBk5B",
          "name": "Google Drive account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "=name = '{{ $json.folderName }}'",
        "limit": 1,
        "filter": {
          "whatToSearch": "folders"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        320,
        940
      ],
      "id": "e95c6a6f-6421-477b-8adf-ebf4ced632ff",
      "name": "Get folder content",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rM48WFWYbq8aBk5B",
          "name": "Google Drive account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "formTitle": "Get folder name",
        "formDescription": "Folder name to update rag content (ex: rag_appart)",
        "formFields": {
          "values": [
            {
              "fieldLabel": "folderName",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -460,
        920
      ],
      "id": "425fbe7f-ddb0-42f4-914f-e578944c6f78",
      "name": "Get folderName form",
      "webhookId": "a003fb53-fffc-42b6-8c0b-723b340e7289"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c70d41c8-c71c-4965-b891-8186275edbfb"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b193a8d9-1322-44a2-a506-54e9fcca4e80",
                    "leftValue": "={{ $json.mimeType === 'application/vnd.google-apps.document' || $json.mimeType === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' }}",
                    "rightValue": "=",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1160,
        1060
      ],
      "id": "61484cbc-bc70-4281-a029-bf087c55721a",
      "name": "Switch mimeType"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1440,
        960
      ],
      "id": "08641125-e75b-4660-bbb6-69d82a4dca9f",
      "name": "Extract from Pdf"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('Metadata dbName').item.json.qdrantDbName }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        1840,
        1300
      ],
      "id": "ff9f8d54-aa20-4310-80bd-f51d6e4112b3",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "70YbAQdnvCQbSD6T",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1840,
        1460
      ],
      "id": "1ecdfed0-e8fb-4b8e-88e2-21817ead35a2",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "PmqmzdRFH1SO1Yvi",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $('Map text').first().json.text }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "fileId",
                "value": "={{ $('Download files').item.json.id }}"
              },
              {
                "name": "fileName",
                "value": "={{ $('List Docs In Folder').item.json.name }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2020,
        1420
      ],
      "id": "19d7f5f7-06a3-4415-941a-be8e676f2fd9",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 800,
        "chunkOverlap": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2180,
        1520
      ],
      "id": "819963ec-65d3-4136-ac4b-df94030c0b0a",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-docx-converter.docxToText",
      "typeVersion": 1,
      "position": [
        1440,
        1140
      ],
      "id": "4b599912-8f69-4336-a3df-8370b9ae4df1",
      "name": "DOCX to Text"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1bf0453a-8f8c-40e2-bfad-8398a6e33a8c",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        940
      ],
      "id": "81a45438-dcd9-4ec8-8102-c0de8fb7d8fc",
      "name": "If folder id exists"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "folderName",
              "placeholder": "rag_appart"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [
        560,
        1160
      ],
      "id": "bf396dad-daab-4780-b446-d94ed92b696f",
      "name": "Get folderName form 2",
      "webhookId": "cd718a60-097d-4560-b134-65ceab263156"
    },
    {
      "parameters": {
        "errorMessage": "Aucun résultat, veuillez vérifier !"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        580,
        200
      ],
      "id": "296e337a-a72d-44dc-b950-b21736aefd78",
      "name": "Not Found Error"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Loop Over Items').item.json.id }}",
          "mode": "id"
        },
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1000,
        1060
      ],
      "id": "36f2c101-bce4-4443-84bb-ae396e659f6e",
      "name": "Download files",
      "retryOnFail": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rM48WFWYbq8aBk5B",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        960,
        0
      ],
      "id": "962fee6c-9d86-4758-bcda-4cc8655baa7b",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE IF NOT EXISTS {{ $json.postgresDbName }} (\n    id TEXT PRIMARY KEY,\n    title TEXT,\n    \"createdAt\" TIMESTAMPTZ,\n    \"updatedAt\" TIMESTAMPTZ,\n    \"theme\" TEXT,\n    \"topics\" TEXT,\n    \"painPoints\" TEXT,\n    \"keywords\" TEXT\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        280,
        -40
      ],
      "id": "ee3ec5cb-4500-4071-8ac4-65d08619a46b",
      "name": "Create table if not exists",
      "credentials": {
        "postgres": {
          "id": "R8z5A96juGNl77cz",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, \"createdAt\", \"updatedAt\" \nFROM {{ $('Metadata dbName').item.json.postgresDbName }}\nWHERE id = '{{ $('Loop Over Items').item.json.id }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1260,
        20
      ],
      "id": "03ccaa36-5c22-4748-b0dd-18ab2d94f5b6",
      "name": "Query file id",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "R8z5A96juGNl77cz",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6a0f1d8e-2473-4933-8292-7ed98edba132",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $('Loop Over Items').item.json.id }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1480,
        20
      ],
      "id": "3a62d572-cb46-445b-af08-d6f3727b45e9",
      "name": "If exists"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c72db11d-3dc1-4a5d-9b02-0cf5e58f2370",
              "leftValue": "={{ $('Loop Over Items').item.json.createdAt }}",
              "rightValue": "={{ $('Query file id').item.json.createdAt }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "0ec123dc-5720-4bd1-8976-6ff59f711141",
              "leftValue": "={{ $('Loop Over Items').item.json.updatedAt }}",
              "rightValue": "={{ $('Query file id').item.json.updatedAt }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        0
      ],
      "id": "81acd37f-1143-44f0-a80e-da74c5e8e60c",
      "name": "If date is after",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://qdrant:6333/collections/{{ $('Metadata dbName').item.json.qdrantDbName }}/points/delete",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"filter\": {\n    \"must\": [\n      {\n        \"key\": \"metadata.fileId\",\n        \"match\": {\n          \"value\": \"{{ $('List Docs In Folder').item.json.id }}\"\n        }\n      }\n    ]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        0
      ],
      "id": "e4578478-42cb-4251-a8cc-d851ada7a63e",
      "name": "Delete Qdrant metadata.fileId",
      "credentials": {
        "qdrantApi": {
          "id": "70YbAQdnvCQbSD6T",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO {{ $('Metadata dbName').item.json.postgresDbName }}\n(id, title, \"createdAt\", \"updatedAt\") \nVALUES \n('{{ $('Loop Over Items').item.json.id }}', '{{ $('Loop Over Items').item.json.name }}', '{{ $('Loop Over Items').item.json.createdAt }}', '{{ $('Loop Over Items').item.json.updatedAt }}');",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1480,
        260
      ],
      "id": "0d326ab2-efe8-4cf0-a2b1-9c8e74153264",
      "name": "Create metadata row",
      "credentials": {
        "postgres": {
          "id": "R8z5A96juGNl77cz",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE {{ $('Metadata dbName').item.json.postgresDbName }}\nSET \n    title = '{{ $('List Docs In Folder').item.json.name }}',\n    \"createdAt\" = '{{ $('List Docs In Folder').item.json.createdAt }}',\n    \"updatedAt\" = '{{ $('List Docs In Folder').item.json.updatedAt }}'\nWHERE \n    id = '{{ $('Loop Over Items').item.json.id }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2060,
        260
      ],
      "id": "152b93c6-aefe-45ed-9946-82c2de592b3f",
      "name": "Update metadata row",
      "credentials": {
        "postgres": {
          "id": "R8z5A96juGNl77cz",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Step 2: Metadata table (PostGres)",
        "height": 860,
        "width": 2200,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        140,
        -280
      ],
      "id": "5c13a564-ee63-42ec-9207-da3350c381c4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Step 1: Get files from Drive's folder by name",
        "height": 1000,
        "width": 700,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        140,
        640
      ],
      "id": "35ec4d8b-861d-4af4-9dac-0cab29d378bc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Step 3: Insert into vector store (Qdrant)",
        "height": 1000,
        "width": 1460,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        640
      ],
      "id": "12968580-9975-42f5-afd1-d35d84e5a880",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1206608d-dc8f-4aa4-9579-12616a719eeb",
              "name": "id",
              "value": "={{ $('List Docs In Folder').item.json.id }}",
              "type": "string"
            },
            {
              "id": "ae3799fd-49a9-45b9-9ce7-122e0662991d",
              "name": "name",
              "value": "={{ $('List Docs In Folder').item.json.name }}",
              "type": "string"
            },
            {
              "id": "0d7aae65-4ead-481a-8307-76e424b02bd5",
              "name": "mimeType",
              "value": "={{ $('List Docs In Folder').item.json.mimeType }}",
              "type": "string"
            },
            {
              "id": "a773e170-f166-4684-b4c2-68a49096db56",
              "name": "url",
              "value": "={{ $('List Docs In Folder').item.json.url }}",
              "type": "string"
            },
            {
              "id": "18f6bb69-6b26-4c0c-97fc-8a47c5c90391",
              "name": "createdAt",
              "value": "={{ $('List Docs In Folder').item.json.createdAt }}",
              "type": "string"
            },
            {
              "id": "1b614e13-8093-4523-aa10-743d626557ca",
              "name": "updatedAt",
              "value": "={{ $('List Docs In Folder').item.json.updatedAt }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "except",
        "excludeFields": "success",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1140,
        260
      ],
      "id": "0a415cdc-b831-436e-8765-f989341b1b7a",
      "name": "Add general fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        920,
        720
      ],
      "id": "1ce1afb5-ee34-4a6b-b711-0ee6eb585e5e",
      "name": "Loop Over Items 2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-exp-03-25",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "e403da94-ae89-4e71-ae15-2e303777035e",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1880,
        960
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "og4gMnGbp8Uy7toF",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.query }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2140,
        980
      ],
      "id": "185281df-f9df-4c02-bf15-bba05a2758cc",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "R8z5A96juGNl77cz",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Triggers",
        "height": 660,
        "width": 620,
        "color": 4
      },
      "id": "14d76611-4812-4d46-904b-04c2b9dd3a44",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -520,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get the folder\n- Search for the folder by name\n- Ask the user again if couldn't find",
        "height": 660,
        "width": 500
      },
      "id": "aeb0b1d2-bfee-4ca5-b5e1-4b863ec5111e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Google Drive\n- List all docs in folder (recursive)",
        "height": 600,
        "width": 300,
        "color": 2
      },
      "id": "b9cb8390-e936-4696-90b9-99432453d9c1",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        -160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Postgres\n- Create table if not exists",
        "height": 280,
        "width": 300,
        "color": 5
      },
      "id": "845204e8-7150-4875-a1da-f42efb4b88de",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        180,
        -160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "66da3861-2945-403a-9463-c0177407ebf1",
              "name": "postgresDbName",
              "value": "=n8n_{{ $('Get folder content').item.json.name.toLowerCase() }}_metadata",
              "type": "string"
            },
            {
              "id": "28492a8e-d548-4b47-9486-0e841500dc42",
              "name": "qdrantDbName",
              "value": "=n8n_{{ $('Get folder content').item.json.name.toLowerCase() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        280,
        260
      ],
      "id": "20961703-827e-4124-b2be-60d363ef7f1b",
      "name": "Metadata dbName"
    },
    {
      "parameters": {
        "content": "## Postgres (metadata)\n- Perform batch treatment on files\n- If a file is found on metadata's table we look for the date\n- If createdAt or updatedAt is newer we perfom safe upsert on file\n- We skip other items (no need to update them)",
        "height": 600,
        "width": 1040,
        "color": 5
      },
      "id": "df763432-82f4-4026-ab58-7803ee3cde9a",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        -160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Map db names\n- postgresDbName\n- qdrantDbName",
        "height": 300,
        "width": 300,
        "color": 6
      },
      "id": "58032ec7-ddf9-4fde-9f14-fc7b2b670eb9",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        180,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Qdrant\n- Deletion based on metadata fileId in Qdrant",
        "height": 600,
        "width": 300,
        "color": 3
      },
      "id": "59d96fb9-463d-44d4-a886-194efced4a17",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1960,
        -160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c634455-a97f-42e9-b56d-22eb9e94ab02",
              "name": "skipItem",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        260
      ],
      "id": "2c966ca7-5b79-4ac8-b4d5-602e8a6a17c3",
      "name": "Add skipItem"
    },
    {
      "parameters": {
        "content": "## Google Drive\n- Download file",
        "height": 340,
        "width": 340
      },
      "id": "692ac785-299b-4553-8fcf-9137ac8fa653",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        960,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## File extraction\n- Pdf\n- Docx, txt, ...",
        "height": 500,
        "width": 400,
        "color": 6
      },
      "id": "59b59dc4-d8ee-47f8-b591-0fe14a187baa",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1360,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "attributes": {
          "attributes": [
            {
              "name": "theme",
              "description": "Résumer le(s) thème(s) principal(aux) abordé(s) dans le document."
            },
            {
              "name": "topics",
              "description": "Répertoriez les sujets récurrents mentionnés dans le document sous forme de tableau."
            },
            {
              "name": "painPoints",
              "description": "Résumez les frustrations ou les défis de l'utilisateur mentionnés dans la section du document sous la forme d'un tableau. (facultatif)"
            },
            {
              "name": "keywords",
              "description": "Générez une liste de 10 mots-clés maximum qui capturent l’essence du document (par exemple, « contrat », « juridique », « appartement »)."
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=Tu es un expert en algorithmes d'extraction.\nExtrais uniquement les informations pertinentes du texte.\nSi tu ne connais pas la valeur d'un attribut à extraire, tu peux l'omettre.\n\nIMPORTANT: Ta réponse doit être UNIQUEMENT un objet JSON valide avec les champs suivants :\n- theme: le thème principal du document\n- topics: les sujets abordés dans le document\n- painPoints: les points de douleur identifiés (optionnel)\n- keywords: les mots-clés pertinents\n\nNe pas inclure de backticks (```) ou de formatage Markdown, ni la mention json. Réponds simplement avec l'objet JSON brut."
        }
      },
      "id": "31fdd785-6110-406d-83d6-4f7097abfaeb",
      "name": "Summarize",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        1840,
        820
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Summarizer\n- Extract relevant infos: theme, topics, painPoints, keywords\n- Insert them into metadata's table",
        "height": 440,
        "width": 500,
        "color": 5
      },
      "id": "a9dc9d33-3de1-4f86-9e2e-bfedac5794aa",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1800,
        680
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Qdrant\n- Embed the text into vector store\n- Chunk size (800) / Chunk overlap (100)",
        "height": 440,
        "width": 500,
        "color": 3
      },
      "id": "bac8affb-e814-41b9-b1b7-e1873ac0427c",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1800,
        1160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "1699725a-8f47-4139-a958-67280be8f5fa",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -460,
        1100
      ],
      "id": "026120e1-42d6-42af-a4a6-f89c23a8d4a2",
      "name": "Webhook",
      "webhookId": "1699725a-8f47-4139-a958-67280be8f5fa"
    },
    {
      "parameters": {
        "content": "\n\n\nBatch download is prefered on files.\nBecause Google can perfrom timeout.",
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        960,
        1280
      ],
      "id": "5943b540-2cfd-487d-8c00-bfd24bb9f0e4",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1360,
        2220
      ],
      "id": "15e8d00e-65c0-47c8-9898-6cbcd7b9957b",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "jsCode": "const output = $json.output;\nconst updateFields = [];\nconst dbName = $('Metadata dbName').first().json.postgresDbName;\n\nupdateFields.push(`\"theme\" = '${output.theme.replace(/'/g, \"''\")}'`);\nupdateFields.push(`\"topics\" = '${output.topics.replace(/'/g, \"''\")}'`);\n\n// Ajouter painPoints seulement s'il existe et n'est pas undefined\nif (output.painPoints && output.painPoints !== 'undefined') {\n  updateFields.push(`\"painPoints\" = '${output.painPoints.replace(/'/g, \"''\")}'`);\n}\n\nupdateFields.push(`\"keywords\" = '${output.keywords.replace(/'/g, \"''\")}'`);\n\nconst query = `\nUPDATE ${dbName}\nSET ${updateFields.join(', ')}\nWHERE id = '${$('Loop Over Items').item.json.id}';`;\n\nreturn { query };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2140,
        820
      ],
      "id": "9f78a7c9-a781-413e-8892-f84892b92cb1",
      "name": "Build query"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a3db721c-86b8-4665-af1a-cde6643ffa0b",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        1020
      ],
      "id": "d269ce32-cecf-4945-b1dc-841a07771dd6",
      "name": "Map text"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1280,
        1300
      ],
      "id": "9dfb57a5-dde2-45a8-bf2f-f9f8388a1f0b",
      "name": "Wait 5s",
      "webhookId": "ce5815e9-8531-4fb4-9bca-3090f644c73a"
    },
    {
      "parameters": {
        "content": "## Chunk params\n- Long: 1000-5000\n- Short: 500-1000\n- Items, list: 100-500\n\n## Overlap params\n1-5%",
        "height": 220,
        "width": 220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        1160
      ],
      "id": "14b671e3-ca4a-4d57-b832-34fde615b88b",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "folderName"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -460,
        1260
      ],
      "id": "cdaf2686-89db-41a3-9435-6c2030eec510",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "80742a69-4d70-46cc-a812-64c4f397c8cb",
              "leftValue": "={{ $('Merge').item.json.source }}",
              "rightValue": "WORKFLOW",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        2040
      ],
      "id": "b20b9664-7980-4773-845d-2d8fc44a11f2",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42a4429b-a22b-4017-8be0-b60e16749d4a",
              "name": "source",
              "value": "FORM",
              "type": "string"
            },
            {
              "id": "35853db2-9085-4028-82cd-905f6a2c9c9c",
              "name": "folderName",
              "value": "={{ $json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -240,
        920
      ],
      "id": "4c9d62d1-b21a-4610-aa32-61240140dee0",
      "name": "Set Source FORM"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42a4429b-a22b-4017-8be0-b60e16749d4a",
              "name": "source",
              "value": "WEBHOOK",
              "type": "string"
            },
            {
              "id": "5b19b7be-9909-4187-8f6a-f9897fd8e61f",
              "name": "folderName",
              "value": "={{ $json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -240,
        1100
      ],
      "id": "bab666f1-2b9a-4c5c-a8da-21656b8abe0e",
      "name": "Set Source WEBHOOK"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42a4429b-a22b-4017-8be0-b60e16749d4a",
              "name": "source",
              "value": "WORKFLOW",
              "type": "string"
            },
            {
              "id": "7169a941-e95f-43e0-99b0-2a00a27950e1",
              "name": "folderName",
              "value": "={{ $json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -240,
        1260
      ],
      "id": "bb1d124a-7abd-4b11-83ae-248c9436f00b",
      "name": "Set Source WORKFLOW"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Merge').item.json.source }}",
                    "rightValue": "FORM",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a36f4867-1bcc-4a6c-9176-78a77e01a596"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "63155b24-fb50-42f5-bb85-aa6e1aaf951d",
                    "leftValue": "={{ $('Merge').item.json.source }}",
                    "rightValue": "WORKFLOW",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        320,
        1180
      ],
      "id": "2687d5bf-8a78-4115-b64b-577ba04445ee",
      "name": "Switch Source"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b48fb769-a6c6-40ae-aed4-834036d402d3",
              "name": "message",
              "value": "=Impossible de trouver le dossier: {{ $('Merge').item.json.folderName }} veuillez réessayer !",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        920,
        2220
      ],
      "id": "70e68f60-45ca-42a9-acda-94e7deb941a5",
      "name": "Set Not Found Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7211bd87-a15f-442c-ace3-a51da512b215",
              "name": "message",
              "value": "=Mise à jour du dossier: {{ $('Merge').item.json.folderName }} avec succès !",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        920,
        2040
      ],
      "id": "c4efc1df-fb66-4533-aff3-fb875aae2721",
      "name": "Set Done Message"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "505cc1da-27a0-4456-b96d-946245c186f5",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1360,
        1840
      ],
      "id": "ecfa92d2-b50f-4971-a889-03d0a342e8c5",
      "name": "Response"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -40,
        1100
      ],
      "id": "a5e55d83-0606-47d9-90f0-ad1dca072e5b",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "# Final\nSend a message to the user if he's coming from the Telegram Workflow",
        "height": 700,
        "width": 680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        1720
      ],
      "id": "ee9f5ea7-b361-4a56-8c4d-dad4d2d6dea1",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b48fb769-a6c6-40ae-aed4-834036d402d3",
              "name": "message",
              "value": "=Aucun élément à mettre à jour dans le dossier: {{ $('Merge').item.json.folderName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        920,
        1840
      ],
      "id": "6e54e953-e296-4d76-b3e6-7b24ffffb020",
      "name": "Set Nothing to perform Message"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f56ac961-984f-4152-b912-794308eb9be3",
              "leftValue": "={{ $json.skipItem }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1620,
        640
      ],
      "id": "f9a8599c-f415-47ff-b637-c0b5db417b3e",
      "name": "Filter skipItem",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1620,
        460
      ],
      "id": "d82ef81d-2cda-4ad6-95df-824fa5c74ea7",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "66ed9108-8757-4933-8c79-d4731b98b06f",
              "leftValue": "={{ $input.all().every(item => item.json.skipItem) }}",
              "rightValue": "={{ $input.all().length }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        960,
        480
      ],
      "id": "6ae204d9-28b2-45b1-b470-a371143b243a",
      "name": "If every skipItem"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "saveExecutionProgress": true
  },
  "staticData": {
    "node:Google Drive Trigger": {
      "lastTimeChecked": "2025-02-27T21:53:10Z"
    },
    "node:Google Drive Trigger1": {
      "lastTimeChecked": "2025-02-27T21:52:55Z"
    },
    "node:Google Drive Trigger2": {
      "lastTimeChecked": "2025-02-27T21:53:03Z"
    }
  },
  "tags": [
    {
      "createdAt": "2025-04-29T15:25:25.104Z",
      "updatedAt": "2025-04-29T15:25:25.104Z",
      "id": "BsAhe622cR53PoZb",
      "name": "qdrant"
    },
    {
      "createdAt": "2025-04-29T15:25:21.698Z",
      "updatedAt": "2025-04-29T15:25:21.698Z",
      "id": "dlt1FEn2ZK8zJfUl",
      "name": "postgres"
    },
    {
      "createdAt": "2025-04-29T15:27:02.017Z",
      "updatedAt": "2025-04-29T15:27:02.017Z",
      "id": "y8BovRERJj3LXxLR",
      "name": "drive"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2025-04-29T15:27:05.000Z",
  "versionId": "149e1ef7-a5d0-4346-9bae-0c42f56d1315"
}