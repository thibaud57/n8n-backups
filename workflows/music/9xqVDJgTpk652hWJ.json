{
  "active": false,
  "connections": {
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "Filter new data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter new data": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Soundcloud Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Set Soundcloud Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Facebook Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Instagram Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Beatport Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Bandcamp Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Soundcloud Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Instagram Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Facebook Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Bandcamp Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Beatport Prompt": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4.1 mini": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "4.1 mini1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Beatport Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Techno scraper": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "LabelSheet Subworkflow": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Bandcamp Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-05T11:05:55.266Z",
  "id": "9xqVDJgTpk652hWJ",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Label Sheet",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "value": "134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        -528,
        368
      ],
      "id": "f0dae14c-50fe-4784-8748-1639762205c1",
      "name": "Google Sheets Trigger",
      "credentials": {
        "googleSheetsTriggerOAuth2Api": {
          "id": "E31qXEqD3Qz0tKIq",
          "name": "Google Sheets Trigger account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c9617af9-d01b-4184-a5cf-9f9497403471",
              "leftValue": "={{ $json.N8N }}",
              "rightValue": "=Oui",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "d7ce151c-204d-449e-a77f-5dc42861c901",
              "leftValue": "={{ $json.Nom.toString() }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -336,
        368
      ],
      "id": "0612c4fe-6264-4871-b286-15c1dcc71821",
      "name": "Filter new data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Nom du label: {{ $json.Nom }}\nDate du jour: {{ $today }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# üè∑Ô∏è Agent IA de Remplissage Automatique pour Google Sheet ‚Äì Labels Musicaux  \n\n## üéØ Objectif  \nAutomatiser la collecte et le remplissage des informations d‚Äôun label musical dans un **Google Sheet**.\n\nAfin de r√©partir la charge et d'am√©liorer l'efficacit√© du processus, nous orchestrons et distribuons les t√¢ches √† plusieurs **sous-agents sp√©cialis√©s** (SoundCloud, Beatport). Chaque sous-agent est responsable de l‚Äôextraction des donn√©es sur sa plateforme respective.\n\n\nTon but est donc de coordonner l‚Äôex√©cution des sous-agents et rassembler les donn√©es extraites dans un format JSON structur√©.  \n\n---\n\n## üì• Donn√©es d‚Äôentr√©e  \nL‚Äôagent re√ßoit en entr√©e :  \n- **Le nom du label** *(exemple : \"Afterlife Recordings\")* \n- **La date du jour** *(exemple : \"[DateTime: 2025-03-23T00:00:00.000+01:00]\")* \n\n---\n\n### **üõ†Ô∏è Processus**  \n1. Transmettre les inputs aux sous agents en indiquant **name** pour le nom du label et **date** au format (YYYY-MM-DD).\n2. R√©cup√©rer leur outputs. Lorsqu'un agent √† terminer sa tache il renvoi **isAgentDone: true**.\nLes agents s'executent en parall√®le, il est primordial que chaque agent renvoi isAgentDone √† true pour chaque nom de label √† scraper avant de passer √† la suite.\n3. **Fusionner les r√©sultats** dans un JSON unique une fois que tous les agents ont fini leur taches.\n\n---\n\n## üì• Format de sortie  \n{\n  \"name\": \"{{ $json.Nom }}\"\n  \"country\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"genre\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"isActive\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"isOpenNew\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"emailDemo\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"vinyle\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"scFollowers\": \"Valeur num√©rique si trouv√©e, sinon champ vide\",\n  \"soundcloudLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"facebookLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"instagramLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"beatportLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"bandcampLink\": \"URL si trouv√©e, sinon champ vide\"\n}\n\n---\n\n## ‚úÖ **R√©sum√© de l'Architecture**  \n\n1. **L‚Äôagent orchestrateur** re√ßoit le **nom du label**.  \n2. Il d√©l√®gue les recherches aux **sous-agents sp√©cialis√©s** dans cet ordre pr√©cis :  \n   - **SoundCloud** (Pays, Email demo, Followers, Lien SoundCloud)  \n   - **Beatport** (Genre, Actif, Ouvert aux nouveaux, Lien Beatport)  \n3. Il attend que tous les agents finissent leur tache en cours.\n4. Il r√©cup√®re et **fusionne les r√©sultats** en un JSON final.\n\nüéØ **Finalit√©**\nPasser √† la suite une fois que le JSON final est produit."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        64,
        384
      ],
      "id": "4e0431a9-6932-4633-81b8-675364838a38",
      "name": "AI Agent",
      "executeOnce": false
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"name\": \"Nom du label\",\n  \"country\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"genre\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"isActive\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"isOpenNew\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"emailDemo\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"vinyle\": \"Oui/Non si trouv√©, sinon champ vide\",\n  \"scFollowers\": \"Valeur num√©rique si trouv√©e, sinon champ vide\",\n  \"soundcloudLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"facebookLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"instagramLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"beatportLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"bandcampLink\": \"URL si trouv√©e, sinon champ vide\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        368,
        496
      ],
      "id": "05c3750a-e8a8-4271-a517-9b8e3750ccca",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Soundcloud",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "dba1aff8-a1ce-43f3-bd1f-a5669382407c"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3ec63d0e-2e77-4adf-be10-336fdcf1eafa",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Facebook",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "799619c6-79d9-421e-bbef-332c30617317",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Instagram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b36f8a60-5a56-4e99-86cc-34811d8831c5",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Beatport",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "23f1bfc1-a6c3-4c97-a6bc-d1ab8267383b",
                    "leftValue": "={{ $json.agentType }}",
                    "rightValue": "Bandcamp",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -336,
        1152
      ],
      "id": "4eaddb7f-072e-4f03-a810-8eec38b04ceb",
      "name": "Switch"
    },
    {
      "parameters": {
        "name": "Soundclould",
        "description": "Agent Soundcloud",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        240,
        656
      ],
      "id": "cbb33336-c3f0-49c4-aafa-f5b6d68de2a3",
      "name": "Soundcloud Agent",
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=# üè∑Ô∏è Agent SoundCloud\n\n## üéØ Objectif\nExtraire les informations disponibles sur **SoundCloud** du label.  \n\n## üì• Donn√©es d‚Äôentr√©e\n- **name** = {{ $('LabelSheet Subworkflow').item.json.name }}\n\n## üõ†Ô∏è Processus  \n\n1. Rechercher la page avec urlEndpoint: \"api/soundcloud/search-profile/{name}?page=1&limit=10\"\n-> Passer tr√®s exactement ce texte sans rien rajouter avant ou apres.\n\n2. D√©terminer le profil le plus pertinent dans la liste\n\n3. Extraire :  \n  - **Pays** *(si mentionn√© sur la page ou dans la bio)*  \n  - **Email demo** *(description du profil)*  \n  - **Nombre de followers**  \n  - **Lien des pages des r√©seaux sociaux**\n\nExemple:\n{\n  ...\n  \"profiles\": [\n        {\n      \"id\": 1348418565,\n      \"name\": \"Makatao\",\n      \"url\": \"https://soundcloud.com/makatao-269203819?utm_medium=api&utm_campaign=social_sharing&utm_source=id_318628\",\n      \"avatar_url\": \"https://i1.sndcdn.com/avatars-9hmviLzfKWlzldYE-YDDyvw-large.jpg\",\n      \"bio\": \"Bio of label\",\n      \"location\": \"Germany\",\n      \"followers_count\": 500,\n      \"social_links\": [\n        {\n          \"platform\": \"instagram\",\n          \"url\": \"https://www.instagram.com/makatao.records/\"\n        },\n        {\n          \"platform\": \"bandcamp\",\n          \"url\": \"https://makatao.bandcamp.com/\"\n        }\n      ]\n    },\n    ...\n  ]\n}\n\n### üîç S√©lection du profil le plus pertinent\nParmi les r√©sultats renvoy√©s par l‚ÄôAPI, il faut choisir le profil le plus pertinent en suivant cette logique :\n\n1. Correspondance exacte ou tr√®s proche du nom\n  - V√©rifie si le nom du profil correspond exactement (ou presque) √† name.\n  - Pour les labels il est probable que le terme \"records\" ou \"recordings\" soit rajout√©, ou tout autre terme du style.\n  - Ignore les profils avec des noms trop √©loign√©s.\n2. Bio renseign√©e\n  - Si plusieurs profils ont des noms proches, pr√©f√®re ceux avec une bio remplie, surtout si elle contient des infos claires sur l‚Äôactivit√© du label (ex : styles musicaux, mention d‚Äôun collectif, label, artistes sign√©s, etc.).\n3. Pr√©sence sur les r√©seaux sociaux\n  - Donne plus de poids aux profils qui affichent des liens vers des r√©seaux sociaux officiels (Instagram, Facebook, etc.).\n4. Nombre de followers\n  - √Ä pertinence √©gale sur les crit√®res ci-dessus, choisis le profil avec le plus de followers, car cela indique g√©n√©ralement une meilleure visibilit√©.\n\n‚ùå Important : ne choisis pas le premier r√©sultat par d√©faut. Prends le temps de comparer plusieurs profils dans la liste.\n‚úÖ Si aucun profil ne semble suffisamment pertinent, ne retourne aucune donn√©e.\n\n### üìß Extraction de l‚ÄôEmail demo (ou formulaire)\nL'objectif est d‚Äôextraire le moyen de contact pour envoyer des d√©mos depuis la bio/description du profil.\n\nVoici l'ordre de priorit√© et les r√®gles √† suivre :\n1. Email contenant le mot ‚Äúdemo‚Äù (ou variantes dans le texte)\n  - Cherche un ou plusieurs emails dans la bio.\n  - Si au moins un email contient ‚Äúdemo‚Äù (ex: demo@label.com, senddemos@label.com, etc.) -> Garder cet email en priorit√©.\n  - Le mail peut ne pas contenir \"demo\", mais il est indiqu√© dans la descripion que c'est le mail destin√© aux d√©mos.\n2. Cas particuliers √† g√©rer avant de valider un email :\n  - Si la bio contient une mention du type : \"do not send demos\" ou \"we don't accept demos\" -> Ne pas extraire d'email dans ce cas.\n  - Si l‚Äôadresse est \"obfusqu√©e\", par exemple : demo(at)label.com ou demo[at]label.com ou demo(at)gmail(dot)com\n  -> Remplacer intelligemment : (at) -> @, (dot) -> ., etc.\n  -> Corriger et retourner un email bien format√© (demo@label.com)\n3. Formulaire √† la place d‚Äôun email\n  - Si la bio contient un lien vers un formulaire (ex: Google Form, Typeform, etc.) -> Renvoyer l‚ÄôURL compl√®te si elle est identifiable (https://...)\n  - Si un formulaire est clairement mentionn√© mais que l‚ÄôURL est absente ou illisible -> Renvoyer \"FORM\"\n4. Email g√©n√©rique (sans mention de demo)\n  - Si aucun email li√© √† des d√©mos n‚Äôest trouv√©, mais qu‚Äôil existe un email g√©n√©rique (ex: contact@label.com) : V√©rifier que rien dans la bio n‚Äôinterdit l‚Äôenvoi de d√©mos -> Dans ce cas, renvoyer cet email g√©n√©rique\n5. Si aucun email ni formulaire utilisable n‚Äôest trouv√©, ou que tout est ambigu ou bloqu√© -> Laisser le champ \"Email demo\" vide.\n\n## üì§ Format de sortie \n{\n  \"country\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"emailDemo\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"scFollowers\": \"Valeur num√©rique si trouv√©e, sinon champ vide\",\n  \"soundcloudLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"facebookLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"instagramLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"beatportLink\": \"URL si trouv√©e, sinon champ vide\",\n  \"bandcampLink\": \"URL si trouv√©e, sinon champ vide\"\n}\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -128,
        880
      ],
      "id": "9be39f3c-2a14-4593-8028-07ebee25eb03",
      "name": "Set Soundcloud Prompt"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt }}",
        "options": {
          "systemMessage": "=## üõ†Ô∏è Proc√©dure d‚Äôextraction des informations  \n\nL‚Äôagent suit la m√©thodologie suivante pour r√©cup√©rer les donn√©es :  \n\nL‚Äôagent utilise **Techno scraper** pour trouver les pages officielles des labels sur diff√©rentes plateformes et en extraire les informations.\nIl va passer √† l'outil l'url √† scraper.\nEnsuite il doit extraire les informations pertinentes.\n\n---\n\n## ‚ùó R√®gles Importantes  \nüî¥ **Ne jamais inventer une information.**  \n‚úîÔ∏è Si une donn√©e est introuvable, **ne pas remplir le champ** plut√¥t que de g√©n√©rer une fausse information.  \n\n---\n\n## üìù Format de sortie  \nL‚Äôagent doit uniquement renvoyer un JSON format√© tel que sp√©cifi√© dans son prompt contenant les champs trouv√©s, sans aucun commentaire ni explication suppl√©mentaire.  \n\n---\n\n## ‚úÖ V√©rifications Finales  \nAvant de renvoyer les donn√©es :  \n- **S‚Äôassurer que toutes les informations sont correctes.**  \n- **Ne pas remplir un champ si l‚Äôinformation est introuvable.**  \n- **V√©rifier le bon format JSON avant de retourner la r√©ponse.**  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        64,
        1184
      ],
      "id": "c2b5c95e-ac74-4a52-afc8-ab5cd6e57ee9",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **Agent Facebook**  \n\n### **üéØ Objectif**  \nExtraire les informations disponibles sur **Facebook** du label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page Facebook officielle via **Brave Search**.  \n2. Extraire :  \n   - **Lien de la page Facebook**  \n   - **Email demo** *(si non trouv√© sur SoundCloud, rechercher dans la description du profil Facebook)*  \n\n### **üì§ Format de sortie**  \n{\n  \"Facebook\": \"URL si trouv√©e, sinon champ vide\",\n  \"Email demo\": \"Valeur si trouv√©e, sinon champ vide\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -128,
        1040
      ],
      "id": "392da689-a9dc-41f2-a55e-00ed2061c266",
      "name": "Set Facebook Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **Agent Instagram**  \n\n### **üéØ Objectif**  \nExtraire les informations disponibles sur **Instagram** du label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page Instagram officielle via **Brave Search**.  \n2. Extraire :  \n   - **Lien de la page Instagram**  \n   - **Email demo** *(si non trouv√© ailleurs, rechercher dans la bio Instagram)*  \n\n### **üì§ Format de sortie**  \n{\n  \"Instagram\": \"URL si trouv√©e, sinon champ vide\",\n  \"Email demo\": \"Valeur si trouv√©e, sinon champ vide\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -128,
        1200
      ],
      "id": "6727e05c-1700-43d5-81a7-5d40b41fb48f",
      "name": "Set Instagram Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=## üè∑Ô∏è **Agent Bandcamp**  \n\n### **üéØ Objectif**  \nExtraire les informations sur **Bandcamp** concernant le label.  \n\n### **üì• Donn√©es d‚Äôentr√©e**  \n- **Nom du label**  \n\n### **üõ†Ô∏è Processus**  \n1. Rechercher la page Bandcamp officielle via **Brave Search**.  \n2. Extraire :  \n   - **Lien de la page Bandcamp**  \n   - **Si le label vend des vinyles** *(mention visible sur la page)*  \n\n### **üì§ Format de sortie**  \n{\n  \"Vinyle\": \"true/false si trouv√©, sinon champ vide\",\n  \"Bandcamp\": \"URL si trouv√©e, sinon champ vide\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -128,
        1536
      ],
      "id": "0155acc8-e297-472c-a9e2-da6e1be40e8b",
      "name": "Set Bandcamp Prompt"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "658e5e25-84ef-49c0-939d-60fb50d6679e",
              "name": "prompt",
              "value": "=# üè∑Ô∏è Agent Beatport\n\n## üéØ Objectif \nExtraire les informations sur **Beatport** concernant le label.  \n\n## üì• Donn√©es d‚Äôentr√©e \n- **name** = {{ $('LabelSheet Subworkflow').item.json.name }}\n- **date** = {{ $('LabelSheet Subworkflow').item.json.date }}\n\n## üõ†Ô∏è Processus  \n\n1. Recherche du label  \nRechercher la page avec urlEndpoint: \"api/beatport/search/{name}?page=1&limit=10&entity_type=label\"\n-> Passer tr√®s exactement ce texte sans rien rajouter avant ou apres.\n\n2. Extraire des r√©sultats l'entity_id et l'entity_slug qui semble le plus pertinent\nParmi les r√©sultats, extraire :\n- `entity_id`\n- `entity_slug`\n- `url` (lien vers la page publique du label)\n\nExemple:\n{\n  ...\n  \"labels\": [\n        {\n      \"id\": 22038,\n      \"name\": \"Drumzone Records\",\n      \"url\": \"https://www.beatport.com/label/drumzone-records/22038\",\n      \"avatar_url\": \"https://geo-media.beatport.com/image_size/500x500/cda9862c-cf92-4d13-ac65-7e9277181f51.jpg\"\n    },\n    ...\n  ]\n}\n- **entity_id** = 22038\n- **entity_slug** = \"drumzone-records\"\n\n**Crit√®res pour choisir le bon label :**\n1. Le nom correspond exactement ou tr√®s fortement √† `name`\n2. Le label peut avoir un logo/avatar\n3. En cas d‚Äôambigu√Øt√©, choisir celui avec le plus de releases ou une URL propre\n\n3. R√©cup√©ration des releases sur 1 an  \nurlEndpoint: \"api/beatport/label/{entity_slug}/releases?entity_id={entity_id}&page=1&limit=100&start_date={date - 1 an}\"\n-> Passer tr√®s exactement ce texte sans rien rajouter avant ou apres.\n\n**Exemple pour la date:** Si on est le 2025-07-01 indiquer pour la date 2024-07-01\n\n4. Analyser et extraire les donn√©es pertinentes\n\n### üéµ Extraction du genre musical\nExtraction depuis `facets` du `name` du `genre` avec le `count` le plus √©lev√©.\nExemple:\n{\n  ...\n  \"facets\": {\n    \"fields\": {\n      \"genre\": [\n        {\n          \"name\": \"Techno (Peak Time / Driving)\",\n          \"count\": 32\n        },\n        {\n          \"name\": \"DJ Tools\",\n          \"count\": 21\n        },\n        {\n          \"name\": \"Deep House\",\n          \"count\": 5\n        },\n        ...\n      ]\n    }\n  }\n}\n- **beatportGenre** = Techno (Peak Time / Driving)\n- Le genre ayant le **plus d‚Äôoccurrences** est retenu.\n- En cas d‚Äô√©galit√©, utiliser l‚Äôordre de priorit√© du tableau ci-dessous (du haut vers le bas).\n- **Important** : Mapper le beaportGenre avec genre tel qu'indiqu√© dans le tableau\n\n| beatportGenre                                    | genre            |\n|--------------------------------------------------|------------------|\n| Techno (Peak Time / Driving)                     | Peak Time        |\n| Techno (Raw / Deep / Hypnotic)                   | Techno           |\n| Progressive House                                | Progressive      |\n| Melodic House & Techno                           | Melodic          |\n| Minimal / Deep Tech, Deep House, Downtempo       | Deep House       |\n| Trance (Main Floor), Trance (Raw / Deep / Hypnotic) | Trance        |\n\nExemple: Si beatportGenre= \"Techno (Raw / Deep / Hypnotic)\" alors genre =\"Techno\"\n\n### ‚úÖ Label actif\n- Si le nombre de releases sur 1 an **‚â• 10** -> le label est **actif** (isActive)\n\n### üë• Label ouvert aux nouveaux artistes  \n- Extraire les **noms ou ID d‚Äôartistes uniques**\n- Si le nombre **‚â• 3** -> le label est **ouvert aux nouveaux artistes** (isOpenNew)\n\n\n## üì§ Format de sortie\n{\n  \"genre\": \"Valeur si trouv√©e, sinon champ vide\",\n  \"isActive\": true/false,\n  \"isOpenNew\": true/false,\n  \"beatportLink\": \"URL de la page principale r√©cup√©r√©e\"\n}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -128,
        1376
      ],
      "id": "e9df78ab-2e7c-4f53-b719-7c6f6458ccf7",
      "name": "Set Beatport Prompt"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        64,
        1328
      ],
      "id": "0f1f9906-627b-4b58-8f45-0c8ae0b0b763",
      "name": "4.1 mini",
      "credentials": {
        "openRouterApi": {
          "id": "oWHcuiJFiXex2Irs",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -32,
        496
      ],
      "id": "ad264e9f-0a8b-402f-934a-b23657116a0f",
      "name": "4.1 mini1",
      "credentials": {
        "openRouterApi": {
          "id": "oWHcuiJFiXex2Irs",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "name": "Beatport",
        "description": "Agent Beatport",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -32,
        656
      ],
      "id": "04a10283-a440-4b0a-94e5-fb2a9a3f64af",
      "name": "Beatport Agent",
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "description": "Outil de scraping",
        "workflowId": {
          "__rl": true,
          "value": "zww9F9TUEbDiNNHV",
          "mode": "list",
          "cachedResultName": "Techno scraper"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "urlEndpoint": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('urlEndpoint', `Attention l'url endpoint doit etre renvoy√© comme sp√©cifi√© dans le prompt.\nPas besoin de rajouter http, https, ou tout autre texte que celui qui est indiqu√© dans le prompt.`, 'string') }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "urlEndpoint",
              "displayName": "urlEndpoint",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        256,
        1328
      ],
      "id": "46b8b1c6-61d5-45d9-914e-c3161ed7c697",
      "name": "Techno scraper",
      "retryOnFail": true
    },
    {
      "parameters": {
        "name": "Facebook",
        "description": "Agent Facebook",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        96,
        656
      ],
      "id": "642801bb-1914-4f05-8e89-424241c7007c",
      "name": "Facebook Agent",
      "disabled": true
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "agentType"
            },
            {
              "name": "name"
            },
            {
              "name": "date"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -528,
        1200
      ],
      "id": "7bfc3840-fac4-44d1-9d27-53f9743e3181",
      "name": "LabelSheet Subworkflow"
    },
    {
      "parameters": {
        "name": "Instagram",
        "description": "Agent Instagram",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        384,
        656
      ],
      "id": "8267697f-b0b1-4fa8-88d4-5a867a71b888",
      "name": "Instagram Agent",
      "disabled": true
    },
    {
      "parameters": {
        "name": "Bandcamp",
        "description": "Agent Bandcamp",
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('name', `Name of label`, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', `Date of day formatted as YYYY-MM-DD`, 'string') }}",
            "agentType": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('agentType', `Sub agents:\n- Soundcloud\n- Facebook\n- Instagram\n- Beatport\n- Bandcamp`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "agentType",
              "displayName": "agentType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        528,
        656
      ],
      "id": "be03bb3a-cca5-4f26-a207-4fceacef1889",
      "name": "Bandcamp Agent",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -144,
        368
      ],
      "id": "ea17859b-cbcf-45db-9961-626eb14b27b5",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "30a7ec73-6e38-4657-af4f-f7b12e0b08be",
              "name": "isAgentDone",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "becd0b71-3f1e-45b6-8865-5a3b260a27ea",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        416,
        1184
      ],
      "id": "4ef50c9d-f9c3-4d7a-bb79-a655dc6ef189",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Labels",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/134ilr5ikGxh3nvTAy4jJL5JZvwZLmCTqpgN8cgZ85yU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Pays": "={{ $json.output.country }}",
            "Genre": "={{ $json.output.genre }}",
            "Actif": "={{ $json.output.isActive }}",
            "Ouvert nouveaux": "={{ $json.output.isOpenNew }}",
            "Email demo": "={{ $json.output.emailDemo }}",
            "Vinyle": "={{ $json.output.vinyle }}",
            "Followers Sc": "={{ $json.output.scFollowers }}",
            "Soundcloud": "={{ $json.output.soundcloudLink }}",
            "Facebook": "={{ $json.output.facebookLink }}",
            "Instagram": "={{ $json.output.instagramLink }}",
            "Beatport": "={{ $json.output.beatportLink }}",
            "Bandcamp": "={{ $json.output.bandcampLink }}",
            "N8N": "Oui",
            "Nom": "={{ $json.output.name }}"
          },
          "matchingColumns": [
            "Nom"
          ],
          "schema": [
            {
              "id": "Nom",
              "displayName": "Nom",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Pays",
              "displayName": "Pays",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Genre",
              "displayName": "Genre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Actif",
              "displayName": "Actif",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Ouvert nouveaux",
              "displayName": "Ouvert nouveaux",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email demo",
              "displayName": "Email demo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Dernier envoi",
              "displayName": "Dernier envoi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb Envoi",
              "displayName": "Nb Envoi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb Ecoute",
              "displayName": "Nb Ecoute",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb Dl",
              "displayName": "Nb Dl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Nb rep email",
              "displayName": "Nb rep email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Release EM",
              "displayName": "Release EM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Vinyle",
              "displayName": "Vinyle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Followers Sc",
              "displayName": "Followers Sc",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Soundcloud",
              "displayName": "Soundcloud",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Facebook",
              "displayName": "Facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Instagram",
              "displayName": "Instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Beatport",
              "displayName": "Beatport",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Bandcamp",
              "displayName": "Bandcamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Top",
              "displayName": "Top",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Songstats",
              "displayName": "Songstats",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Beatstats",
              "displayName": "Beatstats",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "N8N",
              "displayName": "N8N",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        64,
        224
      ],
      "id": "4f2bdd03-84b3-4ce9-b6e1-7c17eee7b203",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "MDbS4ZcEO1gW3cI0",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Google Sheet",
        "height": 627,
        "width": 1238,
        "color": 4
      },
      "id": "30aebfba-fe14-4a34-b57b-a2414e9606cf",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Techno Scraper",
        "height": 851,
        "width": 1238,
        "color": 7
      },
      "id": "efd1693b-8e15-4c7b-9079-8556bba414c5",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -576,
        848
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-05T11:15:54.863Z",
      "updatedAt": "2025-08-05T11:15:54.863Z",
      "id": "dAPPjqCl8mjrICCl",
      "name": "music"
    },
    {
      "createdAt": "2025-08-05T11:06:17.737Z",
      "updatedAt": "2025-08-05T11:06:17.737Z",
      "id": "jsGLP2xaM6ajzhcM",
      "name": "sheet"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-05T11:16:01.000Z",
  "versionId": "176c2d56-8afa-41a1-9c2e-242e159810bf"
}